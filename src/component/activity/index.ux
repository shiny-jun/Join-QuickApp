<template>
    <!-- template里只能有一个根节点 -->
    <div class="activity-page">
        <div class="poster">
            <image src="{{activity.image}}" style='width:120rpx;'></image>
        </div>
        <div class="data">
            <text class="name">{{activity.title}}</text>
            <text class="date">报名时间：{{activity.startdate}} - {{activity.enddate}}</text>
            <text class="tel">活动联系人：{{activity.tel}}</text>
        </div>
        <div class="type">
            <text class="waiting">未开始</text>
            <text class="start">可报名</text>
            <text class="finish">已结束</text>
        </div>
    </div>
</template>

<style>
    .activity-page {
        justify-content: center;
        align-items: center;
        padding: 20px 0;
        height: 280px;
        border-bottom: 1px solid #e6e6e6;
    }
    
    .poster {
        flex: 1;
        padding-left: 20px;
        height: 180px;
        overflow: hidden;
    }
    
    .data {
        flex: 3;
        flex-direction: column;
    }
    
    .name {
        font-size: 34px;
        font-weight: bold;
    }
    
    .date,
    .tel {
        padding-top: 10px;
        font-size: 30px;
    }
    
    .type {
        flex: 1;
        text-align: right;
        padding-right: 20px;
    }
    
    .waiting,
    .start,
    .finish {
        display: inline-block;
        font-size: 24px;
        padding: 5px;
        border-radius: 5px;
    }
    
    .waiting {
        border: 1px solid #ffc34d;
        color: #ffc34d;
    }
    
    .start {
        border: 1px solid #009933;
        color: #009933;
    }
    
    .finish {
        border: 1px solid #ccc;
        color: #ccc;
    }
</style>

<script>
    import router from '@system.router'

    export default {
        // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
        props: [
            'activity'
        ],
        private: {
            title: '示例页面'
        },
        onInit() {
            console.info(this.activity)
        },
        routeDetail() {
            // 跳转到应用内的某个页面，router用法详见：文档->接口->页面路由
            router.push({
                uri: '/DemoDetail'
            })
        }
    }
</script>